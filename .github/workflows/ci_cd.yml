name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Frontend Build
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install & Build Frontend
        working-directory: frontend
        run: |
          npm install
          npm run build

      - name: Upload Frontend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

      # 3Ô∏è‚É£ Backend Packaging
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Backend Deps
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Upload Backend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-code
          path: backend/

  deploy:   # üëà aligned correctly under jobs
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      deployments: write   # üëà required for deployments

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # 1Ô∏è‚É£ Create Deployment
      - name: Create Deployment
        id: deploy
        uses: chrnorm/deployment-action@releases/v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: production
          description: "Deploying main branch"

      # 2Ô∏è‚É£ Immediately mark Deployment as SUCCESS
      - name: Set Deployment Status
        uses: chrnorm/deployment-status@releases/v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          deployment-id: ${{ steps.deploy.outputs.deployment_id }}
          state: success
          environment-url: "https://your-app-url.com"

